AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Service stack

Parameters:
  ServiceName:
    Type: String

  ClusterArn:
    Type: String

  TaskDefinitionArn:
    Type: String

  PublicSubnet1:
    Type: AWS::EC2::Subnet::Id
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet::Id
    
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>

  DesiredCount:
    Type: Number

  ContainerName:
    Type: String

  ContainerPort:
    Type: Number

  VPCID:
    Type: AWS::EC2::VPC::Id
    
Resources:

  MyService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref ServiceName
      Cluster: !Ref ClusterArn
      LaunchType: FARGATE
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinitionArn
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref PublicSubnet1
            - !Ref PublicSubnet2
          SecurityGroups: !Ref SecurityGroups
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref MyTargetGroup

  MyLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: my-microservices-alb
      Subnets:
        - !Ref PublicSubnet1
        - !Ref PublicSubnet2
      SecurityGroups: !Ref SecurityGroups
      Scheme: internet-facing
      Type: application

  MyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VPCID
      Protocol: HTTP
      Port: !Ref ContainerPort
      TargetType: ip

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyTargetGroup
      LoadBalancerArn: !Ref MyLoadBalancer
      Port: 80
      Protocol: HTTP

